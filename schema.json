{
    "title": "CMWA Channel Payload Specification",
    "version": "1.1",
    "channels": {
        "map.overlay.create": {
            "type": "Overlay",
            "purpose": "Create an overlay into which data can be aggregated.",
            "extension": false,
            "direction": "inbound",
            "intent": "overlay.add",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "name": {
                    "description": "The name of the overlay. If not included, the ID is used as the name. Note that overlay names do not have to be unique and are intended for display purposes only.",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "overlayId": {
                    "description": "The unique ID of the new overlay. If no overlayId is included, default overlay with ID equal to sending widget’s ID is assumed. If an overlay with the given ID already exists, this message will have no effect. Note that overlay IDs must be unique even across multiple parent overlays.",
                    "extension": false,
                    "type": "string",
                    "required": false,
                    "alternate": "sender.id"
                },
                "parentId": {
                    "description": "The ID of the parent overlay in which to create this overlay.",
                    "extension": false,
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "properties": {
                    "description": "A JSON object containing any additional properties that could be used by the map.",
                    "type": "object",
                    "required": [],
                    "extension": true,
                    "extensionName": "cmwa-e-007-properties",
                    "additionalProperties": true,
                    "properties": {
                        "iconUrl": {
                            "description": "A url to an image that will be used to represent an overlay on a table of contents or tree.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "readOnly": {
                            "description": "Indicates whether the user may remove form the overlay or add data to the overlay.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false,
                            "altered": true
                        }
                    }
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.overlay.remove": {
            "type": "Overlay",
            "purpose": "Remove entire overlay from the map.",
            "extension": false,
            "direction": "bidirectional",
            "intent": "overlay.remove",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay to be removed. If no overlayId is included, default overlay with ID equal to sending widget's ID is assumed. ",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.overlay.hide": {
            "type": "Overlay",
            "purpose": "Hide existing overlay on the map.",
            "extension": false,
            "direction": "bidirectional",
            "intent": "visibility.set",
            "params": false,
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay to be hidden. If no overlayId is included, default overlay with ID equal to sending widget’s ID is assumed. ",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.overlay.show": {
            "type": "Overlay",
            "purpose": "Show existing overlay on the map.",
            "extension": false,
            "direction": "bidirectional",
            "intent": "visibility.set",
            "params": true,
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay to be shown. If no overlayId is included, default overlay with ID equal to sending widget’s ID is assumed. ",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.overlay.update": {
            "type": "Overlay",
            "purpose": "Update an existing overlay.",
            "extension": false,
            "direction": "bidirectional",
            "intent": "overlay.update",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "name": {
                    "description": "The new name of the overlay. Note that overlay names do not have to be unique and are intended for display purposes only.",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "overlayId": {
                    "description": "The unique ID of the overlay being updated. If no overlayId is included, default overlay with ID equal to sending widget’s ID is assumed. If an overlay with the given ID already exists, this message will update that overlay. If an overlay with the given ID does not exist, an error is generated.  Note that overlay IDs must be unique even across multiple parent overlays.",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "properties": {
                    "description": "A JSON object containing any updated properties that the widget wants changed.  The properties that are set in this field should only be affected, and not overwrite properties that were not specified.",
                    "extension": true,
                    "extensionName": "cmwa-e-007-properties",
                    "type": "object",
                    "additionalProperties": true,
                    "properties": {
                        "iconUrl": {
                            "description": "A JSON object containing any additional properties that could be used by the map.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "description": {
                            "description": "A short description about what the overlay contains.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "readOnly": {
                            "description": "Indicates whether the user may remove form the overlay or add data to the overlay.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false,
                            "altered": true
                        }
                    },
                    "required": false
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.overlay.style": {
            "type": "Overlay",
            "purpose": "Change the look and feel of the graphics on an overlay.",
            "extension": true,
            "extensionName": "cmwa-e-011-OverlayStyling",
            "direction": "inbound",
            "intent": "overlay.style",
            "resultChannel": "tranaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The id of the overlay that these attribute changes should apply to. If no overlayId is included default overlay with id equal to sending widget’s id is assumed.",
                    "extension": true,
                    "extensionName": "cwma-e-011-OverlayStyling",
                    "type": "string",
                    "required": true
                },
                "type": {
                    "description": "The type of graphics that will be affected.  Can be either \"point\", \"line\", \"polygon\",  \"multigeometry\" or \"all\".  If no type is included \"all\" will be used.",
                    "extension": true,
                    "extensionName": "cwma-e-011-OverlayStyling",
                    "type": "array",
                    "required": false,
                    "enum": ["point", "line", "polygon", "multigeometry", "all"]
                },
                "properties": {
                    "description": "A JSON object indicating any additional properties the widget wants stored with this feature.",
                    "extension": true,
                    "extensionName": "cmwa-e-007-properties",
                    "type": "object",
                    "required": [],
                    "properties": {
                        "readOnly": {
                            "description": "Determines if users are allowed to edit the feature.  If the feature is not readOnly, a user has the ability to alter the positions and properties of the feature.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false
                        },
                        "altitudeMode": {
                            "description": "Specifies how the alititude coordinates should be interpreted.  Can be 'relativeToGround', 'clampToGround', or 'absolute'. 'relativeToGround' interprets altitude as meters above the ground.  If above water, it interprets it as meters above sea level.  'clampToGround' clamps the points of the graphic on the ground.  'absolute' interprets altitude as meters above sea level.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["relativeToGround", "clampToGround", "absolute"],
                            "required": false
                        },
                        "fillColor": {
                            "description": "The color for the interior of a polygon or the fill of an icon. The color is a 6 character hex string of the format AARRGGBB where A = alpha,R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineColor": {
                            "description": "The color for a line or the outline of a polygon. The color is a 8 character hex string of the format AARRGGBB where A = alpha, R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineThickness": {
                            "description": "The width in pixels of a line or outline of a polygon. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "lineStyle": {
                            "description": "The style of a line or border of a polygon.  Can be 'dot', 'dash', 'dashdot', 'longdash', 'longdashdot','solid'",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["dot", "dash", "dashdot", "longdash", "longdashdot", "solid"],
                            "required": false
                        },
                        "iconUrl": {
                            "description": "Url to an external graphic that will be used for rendering points.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "iconWidth": {
                            "description": "The width of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconHeight": {
                            "description": "The height of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconXOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.xUnits parameter.  If no properties.xUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconYOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.yUnits parameter.  If no properties.yUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "xUnits": {
                            "description": "Units in which iconXOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        },
                        "yUnits": {
                            "description": "Units in which iconYOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        }
                    }
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.overlay.clear": {
            "type": "",
            "purpose": "Removes all the features from the given overlay.",
            "extension": true,
            "extensionName": "cmwa-e-013-clear",
            "direction": "inbound",
            "intent": "",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The id of the overlay in which the feature to be shown is found. If no overlayId is included, default overlay with id equal to sending widget’s id is assumed. ",
                    "extension": true,
                    "extensionName": "cmwa-e-013-clear",
                    "required": false,
                    "type": "string"
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.plot": {
            "type": "Feature",
            "purpose": "Have the map plot feature data.",
            "extension": false,
            "direction": "bidirectional",
            "intent": "feature.add",
            "resultChannel": "map.transaction.complete",
            "payload": {

                "overlayId": {
                    "description": "The ID of the overlay this feature should be loaded into. If an overlay with this ID already exists, the new feature is merged into existing overlay; otherwise, a new overlay is created. If no overlayId is included, default overlay with ID equal to sending widget’s ID is used. If an overlay exists, it will retain its status (whether visible or hidden). If an overlay is created, it will be made visible.",
                    "extension": false,
                    "required": false,
                    "type": "string"
                },
                "featureId": {
                    "description": "Unique identifier for the given feature data. Note that feature IDs must be unique within a given overlay. Reusing a feature ID will be considered a reload, with the original feature data being removed and replaced by the new feature data.",
                    "extension": false,
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "Name for the given feature data. Note that feature names do not have to be unique and are intended for display purposes only.",
                    "extension": false,
                    "required": false,
                    "type": "string"
                },
                "format": {
                    "description": "Data format of the given feature. If no format is specified, the format defaults to “kml.” A list of formats supported by a particular map implementation may be obtained by querying the map using the map.status channel (see map.status). Note that for this version of the Common Map Widget API, the only format that all map implementations must support is KML.",
                    "extension": false,
                    "required": false,
                    "type": "string"
                },
                "feature": {
                    "description": "Feature data to be loaded into the map.",
                    "extension": false,
                    "required": false,
                    "type": "object",
                    "alternate": "data"
                },
                "zoom": {
                    "description": "true if map should zoom to newly loaded feature data, false if not. Default is false.",
                    "extension": false,
                    "required": false,
                    "type": "boolean"
                },
                "properties": {
                    "description": "A JSON object indicating any additional properties the widget wants stored with this feature.",
                    "extension": false,
                    "type": "object",
                    "required": [],
                    "properties": {
                        "readOnly": {
                            "description": "Determines if users are allowed to edit the feature.  If the feature is not readOnly, a user has the ability to alter the positions and properties of the feature.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false
                        },
                        "altitudeMode": {
                            "description": "Specifies how the alititude coordinates should be interpreted.  Can be 'relativeToGround', 'clampToGround', or 'absolute'. 'relativeToGround' interprets altitude as meters above the ground.  If above water, it interprets it as meters above sea level.  'clampToGround' clamps the points of the graphic on the ground.  'absolute' interprets altitude as meters above sea level.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["relativeToGround", "clampToGround", "absolute"],
                            "required": false
                        },
                        "fillColor": {
                            "description": "The color for the interior of a polygon or the fill of an icon. The color is a 6 character hex string of the format AARRGGBB where A = alpha,R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineColor": {
                            "description": "The color for a line or the outline of a polygon. The color is a 8 character hex string of the format AARRGGBB where A = alpha, R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineThickness": {
                            "description": "The width in pixels of a line or outline of a polygon. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "lineStyle": {
                            "description": "The style of a line or border of a polygon.  Can be 'dot', 'dash', 'dashdot', 'longdash', 'longdashdot','solid'",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["dot", "dash", "dashdot", "longdash", "longdashdot", "solid"],
                            "required": false
                        },
                        "iconUrl": {
                            "description": "Url to an external graphic that will be used for rendering points.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "iconWidth": {
                            "description": "The width of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconHeight": {
                            "description": "The height of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconXOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.xUnits parameter.  If no properties.xUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconYOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.yUnits parameter.  If no properties.yUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "xUnits": {
                            "description": "Units in which iconXOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        },
                        "yUnits": {
                            "description": "Units in which iconYOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        }
                    }
                },
                "menuId": {
                    "description": "Assigns a context menu to a feature as it is being added",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "type": "string",
                    "required": false
                },
                "parentId": {
                    "description": "Assigns this feature as a child of this parent feature.  The parentId must be a child of overlayId and must be a feature or map.feature.plot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.plot.url": {
            "type": "Feature",
            "purpose": "Have the map plot feature data from a Uniform Resource Locator (URL).",
            "extension": false,
            "direction": "bidirectional",
            "intent": "feature.add",
            "params": "url",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "extension": false,
                    "description": "The ID of the overlay this feature should be loaded into. If an overlay with this ID already exists, new feature is merged into existing overlay; otherwise, a new overlay will be created. If no overlayId is included, default overlay with ID equal to sending widget's ID is used. If overlay exists, it will retain its status (whether visible or hidden). If overlay is created, it will be made visible.",
                    "required": false,
                    "type": "string"
                },
                "featureId": {
                    "extension": false,
                    "description": "Unique identifier for the given feature data. Note that feature ids must be unique within a given overlay. Reusing a feature id will be considered a reload with the original feature data being removed and replaced by the new feature data.",
                    "required": true,
                    "type": "string"
                },
                "parentId": {
                    "description": "Assigns this feature as a child of this parent feature.  The parentId must be a child of overlayId and must be a feature or map.feature.plot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "name": {
                    "extension": false,
                    "description": "Name for the given feature data. Note that feature names do not have to be unique and are intended for display purposes only.",
                    "required": false,
                    "type": "string"
                },
                "format": {
                    "extension": false,
                    "description": "Data format of the given feature. If no format is specified, the format defaults to “kml.” A list of formats supported by a particular map implementation can be obtained by querying the map using the map.status channel (see map.status). Note that for this version of the Common Map Widget API, all map implementations must support KML and WMS (GetMap only).",
                    "required": false,
                    "type": "string"
                },
                "url": {
                    "description": "URL from which to retrieve the feature data to load onto the map",
                    "extension": false,
                    "required": true,
                    "type": "string"
                },
                "params": {
                    "description": "A JSON object containing a list of parameters to be passed to the server along with the URL when loading WMS data. Params object is ignored unless “format” is set to “wms”.  Note that request, exceptions, SRS/CRS, width, height, and bbox params should not be passed in as they are determined by the map as needed and will be ignored if passed. Params as passed will be concatenated to the URL and are expected to follow the WMS specification.   All parameters passed in must not be URL encoded (the map widget implementation will URL encode all passed in params).",
                    "extension": false,
                    "type": "object",
                    "required": [],
                    "additionalProperties": true
                },
                "zoom": {
                    "extension": false,
                    "description": "true if map should zoom to newly loaded feature data, false if not. Default is false.  Ignored when loading WMS data.",
                    "required": false,
                    "type": "boolean"
                },
                "visible": {
                    "extension": true,
                    "extensionName": "cmwa-e-012-defaultVisibility",
                    "type": "boolean",
                    "required": false
                },
                "properties": {
                    "description": "Any additional properties to pass to the layer.",
                    "extension": true,
                    "extensionName": "cmwa-e-007-properties",
                    "type": "object",
                    "required": [],
                    "additionalProperties": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.unplot": {
            "type": "Feature",
            "purpose": "Remove feature data from the map.",
            "extension": false,
            "direction": "bidirectional",
            "intent": "feature.remove",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay where the feature to be removed is found. If no overlayId is included, default overlay with an ID equal to sending widget's ID is assumed.",
                    "extension": false,
                    "required": false,
                    "type": "string"
                },
                "featureId": {
                    "description": "The ID of the feature to be removed.",
                    "extension": false,
                    "required": true,
                    "type": "string"
                },
                "parentId": {
                    "description": "The parentId of the feature.  Used only if the parent of the feature is another feature.  The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.hide": {
            "type": "Feature",
            "purpose": "Hide existing feature on the map.",
            "direction": "bidirectional",
            "intent": "visibility.set",
            "params": true,
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay where the feature to be hidden is found. If no overlayId is included, default overlay with ID equal to sending widget's ID is assumed.",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The ID of the feature to be hidden. ",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "parentId": {
                    "description": "The parentId of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.show": {
            "type": "Feature",
            "purpose": "Have the map show previously hidden feature data.",
            "extension": false,
            "direction": "bidirectional",
            "intent": "visibility.set",
            "params": true,
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay where the feature to be shown is found. If no overlayId is included, default overlay with ID equal to sending widget’s ID is assumed. ",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The ID of the feature to be shown. ",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "zoom": {
                    "description": "true if map should zoom to the shown feature, false if not. Default is false.",
                    "extension": false,
                    "type": "booean",
                    "required": false
                },
                "parentId": {
                    "description": "The parentId of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.selected": {
            "type": "Feature",
            "purpose": "'Select', or report that object was selected.",
            "extension": false,
            "direction": "bidirectional",
            "intent": "selection.set",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay which contains the clicked object. If no overlayId is included, default overlay with ID equal to sending widget’s ID is assumed.",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The ID of the feature that contains the clicked object.",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "parentId": {
                    "description": "The parent id of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "selectedId": {
                    "description": "The ID of the actual clicked object (may be a sub-feature contained within the aggregate feature data with the given featureId).",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "selectedName": {
                    "description": "The name of the clicked object.",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.update": {
            "type": "Feature",
            "purpose": "Update an existing feature on the map.",
            "extension": false,
            "direction": "bidirectional",
            "intent": "feature.update",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay where the feature to be updated is currently found. If no overlayId is included, default overlay with ID equal to sending widget's ID is assumed. ",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The ID of the feature to be updated. ",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "parentId": {
                    "description": "The parent id of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "name": {
                    "description": "If the name provided differs from the feature's current name, the display value will be changed to show the new value.  If no value is provided, the feature name will remain unchanged.",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "newOverlayId": {
                    "description": "This represents the ID of an overlay to move the feature to.  If this attribute is provided, the feature should be removed from its current overlay and added to the overlay with this ID.",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "newParentId": {
                    "description": "Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "required": false
                },
                "properties": {
                    "description": "A JSON object indicating any additional properties the widget wants stored with this feature.",
                    "extension": false,
                    "type": "object",
                    "required": [],
                    "properties": {
                        "readOnly": {
                            "description": "Determines if users are allowed to edit the feature.  If the feature is not readOnly, a user has the ability to alter the positions and properties of the feature.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false
                        },
                        "altitudeMode": {
                            "description": "Specifies how the alititude coordinates should be interpreted.  Can be 'relativeToGround', 'clampToGround', or 'absolute'. 'relativeToGround' interprets altitude as meters above the ground.  If above water, it interprets it as meters above sea level.  'clampToGround' clamps the points of the graphic on the ground.  'absolute' interprets altitude as meters above sea level.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["relativeToGround", "clampToGround", "absolute"],
                            "required": false
                        },
                        "fillColor": {
                            "description": "The color for the interior of a polygon or the fill of an icon. The color is a 6 character hex string of the format AARRGGBB where A = alpha,R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineColor": {
                            "description": "The color for a line or the outline of a polygon. The color is a 8 character hex string of the format AARRGGBB where A = alpha, R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineThickness": {
                            "description": "The width in pixels of a line or outline of a polygon. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "lineStyle": {
                            "description": "The style of a line or border of a polygon.  Can be 'dot', 'dash', 'dashdot', 'longdash', 'longdashdot','solid'",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["dot", "dash", "dashdot", "longdash", "longdashdot", "solid"],
                            "required": false
                        },
                        "iconUrl": {
                            "description": "Url to an external graphic that will be used for rendering points.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "iconWidth": {
                            "description": "The width of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconHeight": {
                            "description": "The height of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconXOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.xUnits parameter.  If no properties.xUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconYOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.yUnits parameter.  If no properties.yUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "xUnits": {
                            "description": "Units in which iconXOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        },
                        "yUnits": {
                            "description": "Units in which iconYOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        }
                    },
                    "transactionId": {
                        "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                        "extension": true,
                        "extensionName": "cmwa-e-001-transactions",
                        "type": "string",
                        "required": false,
                        "noDocument": true
                    }
                }
            }
        },
        "map.feature.edit": {
            "type": "Feature",
            "purpose": "Notify a map to begin editing a feature placing the feature in an edit mode",
            "extension": true,
            "extensionName": "cmwa-e-004-DrawingAndEditing",
            "direction": "inbound",
            "intent": "feature.edit.begin",
            "resultChannel": "map.transaction.complete",
            "payload": {

                "overlayId": {
                    "description": "The ID of the overlay where the feature to be updated is currently found. If no overlayId is included, default overlay with ID equal to sending widget's ID is assumed. ",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The ID of the feature to be updated. ",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": true
                },
                "parentId": {
                    "description": "The parent id of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.edit.update": {
            "type": "Feature",
            "purpose": "To notify a widget that an edited feature has updated coordinates. In the event that it is a final edit update, the map should issue a map.feature.update or mil.symbology.feature.update on completion of the edit.",
            "extension": true,
            "extensionName": "cmwa-e-004-DrawingAndEditing",
            "direction": "outbound",
            "intent": "feature.edit.update",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The id of the overlay the feature belongs to. ",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The id of the feature being edited.",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": true
                },
                "parentId": {
                    "description": "The parent id of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "updates": {
                    "description": "An object containing the index which was modified, the type of modification, an the list of coordinates for the feature being edited.",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "object",
                    "required": [],
                    "properties": {
                        "indices": {
                            "description": "An array of indices modified in the update",
                            "extension": true,
                            "extensionName": "cmwa-e-004-DrawingAndEditing",
                            "type": "array",
                            "required": false
                        },
                        "type": {
                            "description": "The type of modification which occurred: 'update', 'remove', or 'add'.",
                            "extension": true,
                            "extensionName": "cmwa-e-004-DrawingAndEditing",
                            "type": "string",
                            "required": false,
                            "enum": ["update", "remove", "add"]
                        },
                        "coordinates": {
                            "description": "An array of the current coordinate objects of the feature being edited.",
                            "extension": true,
                            "extensionName": "cmwa-e-004-DrawingAndEditing",
                            "type": "object",
                            "required": [],
                            "properties": {
                                "lat": {
                                    "description": "The new latitude component of the coordinate(s) that were changed",
                                    "extension": true,
                                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                                    "type": "number",
                                    "required": true,
                                    "minimum": -90,
                                    "maximum": 90
                                },
                                "lon": {
                                    "description": "The new longitude component of the coordinate(s) that were changed",
                                    "extension": true,
                                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                                    "type": "number",
                                    "required": true,
                                    "minimum": -180,
                                    "maximum": 180
                                }
                            }
                        }
                    }
                },
                "properties": {
                    "description": "A JSON object indicating any additional properties the widget wants stored with this feature.",
                    "extension": false,
                    "type": "object",
                    "required": [],
                    "properties": {
                        "readOnly": {
                            "description": "Determines if users are allowed to edit the feature.  If the feature is not readOnly, a user has the ability to alter the positions and properties of the feature.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false
                        },
                        "altitudeMode": {
                            "description": "Specifies how the alititude coordinates should be interpreted.  Can be 'relativeToGround', 'clampToGround', or 'absolute'. 'relativeToGround' interprets altitude as meters above the ground.  If above water, it interprets it as meters above sea level.  'clampToGround' clamps the points of the graphic on the ground.  'absolute' interprets altitude as meters above sea level.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["relativeToGround", "clampToGround", "absolute"],
                            "required": false
                        },
                        "fillColor": {
                            "description": "The color for the interior of a polygon or the fill of an icon. The color is a 6 character hex string of the format AARRGGBB where A = alpha,R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineColor": {
                            "description": "The color for a line or the outline of a polygon. The color is a 8 character hex string of the format AARRGGBB where A = alpha, R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineThickness": {
                            "description": "The width in pixels of a line or outline of a polygon. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "lineStyle": {
                            "description": "The style of a line or border of a polygon.  Can be 'dot', 'dash', 'dashdot', 'longdash', 'longdashdot','solid'",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["dot", "dash", "dashdot", "longdash", "longdashdot", "solid"],
                            "required": false
                        },
                        "iconUrl": {
                            "description": "Url to an external graphic that will be used for rendering points.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "iconWidth": {
                            "description": "The width of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconHeight": {
                            "description": "The height of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconXOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.xUnits parameter.  If no properties.xUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconYOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.yUnits parameter.  If no properties.yUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "xUnits": {
                            "description": "Units in which iconXOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        },
                        "yUnits": {
                            "description": "Units in which iconYOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        }
                    }
                },
                "complete": {
                    "description": "True if this is the final update from edit session, false if this is an intermediary update.",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "boolean",
                    "required": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.edit.cancel": {
            "type": "",
            "purpose": "Cancel out of an edit or indicate user cancelled out of an edit.  If the user cancels or interrupts his edit, the map should send out map.feature.edit.cancel call.",
            "extension": true,
            "extensionName": "cmwa-e-004-DrawingAndEditing",
            "direction": "outgoing",
            "intent": "feature.edit.cancel",
            "resultChannel": "",
            "payload": {
                "overlayId": {
                    "description": "The id of the overlay the feature belongs to. ",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The id of the feature being edited.",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": true
                },
                "parentId": {
                    "description": "The parent id of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "coordinates": {
                    "description": "An array of the current coordinate objects of the feature being edited.",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "object",
                    "required": [],
                    "properties": {
                        "lat": {
                            "description": "The new latitude component of the coordinate(s) that were changed",
                            "extension": true,
                            "extensionName": "cmwa-e-004-DrawingAndEditing",
                            "type": "number",
                            "required": true,
                            "minimum": -90,
                            "maximum": 90
                        },
                        "lon": {
                            "description": "The new longitude component of the coordinate(s) that were changed",
                            "extension": true,
                            "extensionName": "cmwa-e-004-DrawingAndEditing",
                            "type": "number",
                            "required": true,
                            "minimum": -180,
                            "maximum": 180
                        }
                    }
                },

                "properties": {
                    "description": "A JSON object indicating any additional properties the widget wants stored with this feature.",
                    "extension": false,
                    "type": "object",
                    "required": [],
                    "properties": {
                        "readOnly": {
                            "description": "Determines if users are allowed to edit the feature.  If the feature is not readOnly, a user has the ability to alter the positions and properties of the feature.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false
                        },
                        "altitudeMode": {
                            "description": "Specifies how the alititude coordinates should be interpreted.  Can be 'relativeToGround', 'clampToGround', or 'absolute'. 'relativeToGround' interprets altitude as meters above the ground.  If above water, it interprets it as meters above sea level.  'clampToGround' clamps the points of the graphic on the ground.  'absolute' interprets altitude as meters above sea level.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["relativeToGround", "clampToGround", "absolute"],
                            "required": false
                        },
                        "fillColor": {
                            "description": "The color for the interior of a polygon or the fill of an icon. The color is a 6 character hex string of the format AARRGGBB where A = alpha,R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineColor": {
                            "description": "The color for a line or the outline of a polygon. The color is a 8 character hex string of the format AARRGGBB where A = alpha, R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineThickness": {
                            "description": "The width in pixels of a line or outline of a polygon. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "lineStyle": {
                            "description": "The style of a line or border of a polygon.  Can be 'dot', 'dash', 'dashdot', 'longdash', 'longdashdot','solid'",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["dot", "dash", "dashdot", "longdash", "longdashdot", "solid"],
                            "required": false
                        },
                        "iconUrl": {
                            "description": "Url to an external graphic that will be used for rendering points.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "iconWidth": {
                            "description": "The width of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconHeight": {
                            "description": "The height of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconXOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.xUnits parameter.  If no properties.xUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconYOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.yUnits parameter.  If no properties.yUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "xUnits": {
                            "description": "Units in which iconXOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        },
                        "yUnits": {
                            "description": "Units in which iconYOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        }
                    }
                },

                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.draw": {
            "type": "",
            "purpose": "Initiates a draw from the map.  The map sends this message to notify the widget that a draw has been started.  The map is then responsible for allowing the user to draw a point, line or polygon.   The map should issue a map.feature.plot or mil.symbology.feature.plot on completion of the draw.",
            "extension": true,
            "extensionName": "cmwa-e-004-DrawingAndEditing",
            "direction": "inbound",
            "intent": "feature.draw.begin",
            "resultChannel": "",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay where the feature to be updated is currently found. If no overlayId is included, default overlay with ID equal to sending widget's ID is assumed. ",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The ID of the feature to be updated. ",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": true
                },
                "parentId": {
                    "description": "The parent id of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "name": {
                    "description": "The name that will display on the new drawing.  If name is not provided populated will be the same as id.",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": false
                },
                "type": {
                    "description": "",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "enum": ["line", "polygon", "point"],
                    "required": true
                },
                "properties": {
                    "description": "A JSON object indicating any additional properties the widget wants stored with this feature.",
                    "extension": false,
                    "type": "object",
                    "required": [],
                    "properties": {
                        "readOnly": {
                            "description": "Determines if users are allowed to edit the feature.  If the feature is not readOnly, a user has the ability to alter the positions and properties of the feature.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false
                        },
                        "altitudeMode": {
                            "description": "Specifies how the alititude coordinates should be interpreted.  Can be 'relativeToGround', 'clampToGround', or 'absolute'. 'relativeToGround' interprets altitude as meters above the ground.  If above water, it interprets it as meters above sea level.  'clampToGround' clamps the points of the graphic on the ground.  'absolute' interprets altitude as meters above sea level.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["relativeToGround", "clampToGround", "absolute"],
                            "required": false
                        },
                        "fillColor": {
                            "description": "The color for the interior of a polygon or the fill of an icon. The color is a 6 character hex string of the format AARRGGBB where A = alpha,R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineColor": {
                            "description": "The color for a line or the outline of a polygon. The color is a 8 character hex string of the format AARRGGBB where A = alpha, R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineThickness": {
                            "description": "The width in pixels of a line or outline of a polygon. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "lineStyle": {
                            "description": "The style of a line or border of a polygon.  Can be 'dot', 'dash', 'dashdot', 'longdash', 'longdashdot','solid'",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["dot", "dash", "dashdot", "longdash", "longdashdot", "solid"],
                            "required": false
                        },
                        "iconUrl": {
                            "description": "Url to an external graphic that will be used for rendering points.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "iconWidth": {
                            "description": "The width of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconHeight": {
                            "description": "The height of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconXOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.xUnits parameter.  If no properties.xUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconYOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.yUnits parameter.  If no properties.yUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "xUnits": {
                            "description": "Units in which iconXOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        },
                        "yUnits": {
                            "description": "Units in which iconYOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        }
                    }
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.feature.draw.cancel": {
            "type": "",
            "purpose": "Indicates a user cancelled out of a draw.",
            "extension": true,
            "extensionName": "cmwa-e-004-DrawingAndEditing",
            "direction": "outgoing",
            "intent": "feature.draw.cancel",
            "resultChannel": "",
            "payload": {
                "overlayId": {
                    "description": "The id of the overlay the feature belongs to. ",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The id of the feature being edited.",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": true
                },
                "parentId": {
                    "description": "The parent id of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "coordinates": {
                    "description": "An array of the current coordinate objects of the feature being edited.",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "object",
                    "required": [],
                    "properties": {
                        "lat": {
                            "description": "The new latitude component of the coordinate(s) that were changed",
                            "extension": true,
                            "extensionName": "cmwa-e-004-DrawingAndEditing",
                            "type": "number",
                            "required": true,
                            "minimum": -90,
                            "maximum": 90
                        },
                        "lon": {
                            "description": "The new longitude component of the coordinate(s) that were changed",
                            "extension": true,
                            "extensionName": "cmwa-e-004-DrawingAndEditing",
                            "type": "number",
                            "required": true,
                            "minimum": -180,
                            "maximum": 180
                        }
                    }
                },
                "properties": {
                    "description": "A JSON object indicating any additional properties the widget wants stored with this feature.",
                    "extension": false,
                    "type": "object",
                    "required": [],
                    "properties": {
                        "readOnly": {
                            "description": "Determines if users are allowed to edit the feature.  If the feature is not readOnly, a user has the ability to alter the positions and properties of the feature.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false
                        },
                        "altitudeMode": {
                            "description": "Specifies how the alititude coordinates should be interpreted.  Can be 'relativeToGround', 'clampToGround', or 'absolute'. 'relativeToGround' interprets altitude as meters above the ground.  If above water, it interprets it as meters above sea level.  'clampToGround' clamps the points of the graphic on the ground.  'absolute' interprets altitude as meters above sea level.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["relativeToGround", "clampToGround", "absolute"],
                            "required": false
                        },
                        "fillColor": {
                            "description": "The color for the interior of a polygon or the fill of an icon. The color is a 6 character hex string of the format AARRGGBB where A = alpha,R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineColor": {
                            "description": "The color for a line or the outline of a polygon. The color is a 8 character hex string of the format AARRGGBB where A = alpha, R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineThickness": {
                            "description": "The width in pixels of a line or outline of a polygon. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "lineStyle": {
                            "description": "The style of a line or border of a polygon.  Can be 'dot', 'dash', 'dashdot', 'longdash', 'longdashdot','solid'",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["dot", "dash", "dashdot", "longdash", "longdashdot", "solid"],
                            "required": false
                        },
                        "iconUrl": {
                            "description": "Url to an external graphic that will be used for rendering points.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "iconWidth": {
                            "description": "The width of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconHeight": {
                            "description": "The height of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconXOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.xUnits parameter.  If no properties.xUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconYOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.yUnits parameter.  If no properties.yUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "xUnits": {
                            "description": "Units in which iconXOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        },
                        "yUnits": {
                            "description": "Units in which iconYOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        }
                    }
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "mil.symbology.feature.plot": {
            "type": "Feature",
            "direction": "inbound",
            "intent": "feature.add",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay this feature should be loaded into. If an overlay with this ID already exists, the new feature is merged into existing overlay; otherwise, a new overlay is created. If no overlayId is included, default overlay with ID equal to sending widget’s ID is used. If an overlay exists, it will retain its status (whether visible or hidden). If an overlay is created, it will be made visible.",
                    "extension": false,
                    "required": false,
                    "type": "string"
                },
                "featureId": {
                    "description": "Unique identifier for the given feature data. Note that feature IDs must be unique within a given overlay. Reusing a feature ID will be considered a reload, with the original feature data being removed and replaced by the new feature data.",
                    "extension": false,
                    "required": true,
                    "type": "string"
                },
                "name": {
                    "description": "Name for the given feature data. Note that feature names do not have to be unique and are intended for display purposes only.",
                    "extension": false,
                    "required": false,
                    "type": "string"
                },
                "format": {
                    "description": "Data format of the given feature. If no format is specified, the format defaults to “kml.” A list of formats supported by a particular map implementation may be obtained by querying the map using the map.status channel (see map.status). Note that for this version of the Common Map Widget API, the only format that all map implementations must support is KML.",
                    "extension": false,
                    "required": false,
                    "type": "string",
                    "enum": ["milstd", "airspace"]
                },
                "feature": {
                    "description": "The coordinates of the symbol in the format \"x,y,z x2,y2,z2...xn,yn,zn\". The z component is optional",
                    "extension": false,
                    "required": false,
                    "type": "object",
                    "alternate": "data"
                },
                "zoom": {
                    "description": "true if map should zoom to newly loaded feature data, false if not. Default is false.",
                    "extension": false,
                    "required": false,
                    "type": "boolean"
                },
                "properties": {
                    "type": "object",
                    "required": false,
                    "properties": {
                        "modifiers": {
                            "type": "object",
                            "required": false,
                            "properties": {
                                "standard": {
                                    "type": "string",
                                    "required": false,
                                    "enum": ["2525b", "2525c"]
                                },
                                "size": {
                                    "type": "number",
                                    "required": false
                                },
                                "additionalInfo1": {
                                    "type": "string",
                                    "required": false
                                },
                                "additionalInfo2": {
                                    "type": "string",
                                    "required": false
                                },
                                "additionalInfo3": {
                                    "type": "string",
                                    "required": false
                                },
                                "altitudeDepth": {
                                    "description": "An array of numbers indicating an angle in degrees or mils depending on the MIL-STD-2525 and USAS",
                                    "type": "number[]",
                                    "required": false
                                },
                                "combatEffectiveness": {
                                    "type": "string",
                                    "required": false
                                },
                                "dateTimeGroup1": {
                                    "type": "string",
                                    "required": false
                                },
                                "dateTimeGroup2": {
                                    "type": "string",
                                    "required": false
                                },
                                "directionOfMovement": {
                                    "type": "string",
                                    "required": false
                                },
                                "distance": {
                                    "type": "string",
                                    "required": false
                                },
                                "equipmentType": {
                                    "type": "string",
                                    "required": false
                                },
                                "evaluationRating": {
                                    "type": "string",
                                    "required": false
                                },
                                "higherFormation": {
                                    "type": "string",
                                    "required": false
                                },
                                "hostile": {
                                    "type": "string",
                                    "required": false,
                                    "enum": ["ENY"]
                                },
                                "iffSiff": {
                                    "type": "string",
                                    "required": false
                                },
                                "location": {
                                    "description": "The location of the symbol.  This is just a label and does not affect the actual location of the symbol",
                                    "type": "string",
                                    "required": false
                                },
                                "offsetIndicator": {
                                    "type": "string",
                                    "required": false
                                },
                                "quantity": {
                                    "type": "string",
                                    "required": false
                                },
                                "reinforcedOrReduced": {
                                    "type": "string",
                                    "required": false,
                                    "enum": ["(-)", "(+)", "(+/-)"]
                                },
                                "signatureEquipment": {
                                    "type": "string",
                                    "required": false
                                },
                                "specialC2Headquarters": {
                                    "type": "string",
                                    "required": false
                                },
                                "speed": {
                                    "type": "string",
                                    "required": false
                                },
                                "staffComments": {
                                    "type": "string",
                                    "required": false
                                },
                                "uniqueDesignation1": {
                                    "type": "string",
                                    "required": false
                                },
                                "uniqueDesignation2": {
                                    "type": "string",
                                    "required": false
                                }
                            }
                        },
                        "airspace": {
                            "type": "object[]",
                            "required": false,
                            "properties": {
                                "minAltitude": {
                                    "type": "number",
                                    "required": false
                                },
                                "maxAltitude": {
                                    "type": "number",
                                    "required": false
                                },
                                "leftWidth": {
                                    "type": "number",
                                    "required": false
                                },
                                "rightWidth": {
                                    "type": "number",
                                    "required": false
                                },
                                "innerRadius": {
                                    "type": "number",
                                    "required": false
                                },
                                "outerRadius": {
                                    "type": "number",
                                    "required": false
                                },
                                "leftAziumth": {
                                    "type": "number",
                                    "required": false
                                },
                                "rightAzimuth": {
                                    "type": "number",
                                    "required": false
                                },
                                "turn": {
                                    "type": "string",
                                    "required": false,
                                    "enum": ["left", "right", "center"]
                                },
                                "width": {
                                    "type": "number",
                                    "required": false
                                }

                            }
                        },
                        "readOnly": {
                            "description": "Determines if users are allowed to edit the feature.  If the feature is not readOnly, a user has the ability to alter the positions and properties of the feature.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false
                        },
                        "altitudeMode": {
                            "description": "Specifies how the alititude coordinates should be interpreted.  Can be 'relativeToGround', 'clampToGround', or 'absolute'. 'relativeToGround' interprets altitude as meters above the ground.  If above water, it interprets it as meters above sea level.  'clampToGround' clamps the points of the graphic on the ground.  'absolute' interprets altitude as meters above sea level.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["relativeToGround", "clampToGround", "absolute"],
                            "required": false
                        },
                        "fillColor": {
                            "description": "The color for the interior of a polygon or the fill of an icon. The color is a 6 character hex string of the format AARRGGBB where A = alpha,R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineColor": {
                            "description": "The color for a line or the outline of a polygon. The color is a 8 character hex string of the format AARRGGBB where A = alpha, R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineThickness": {
                            "description": "The width in pixels of a line or outline of a polygon. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "lineStyle": {
                            "description": "The style of a line or border of a polygon.  Can be 'dot', 'dash', 'dashdot', 'longdash', 'longdashdot','solid'",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["dot", "dash", "dashdot", "longdash", "longdashdot", "solid"],
                            "required": false
                        },
                        "iconUrl": {
                            "description": "Url to an external graphic that will be used for rendering points.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "iconWidth": {
                            "description": "The width of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconHeight": {
                            "description": "The height of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconXOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.xUnits parameter.  If no properties.xUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconYOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.yUnits parameter.  If no properties.yUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "xUnits": {
                            "description": "Units in which iconXOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        },
                        "yUnits": {
                            "description": "Units in which iconYOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        }
                    }
                },
                "menuId": {
                    "description": "Assigns a context menu to a feature as it is being added",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "type": "string",
                    "required": false
                },
                "parentId": {
                    "description": "Assigns this feature as a child of this parent feature.  The parentId must be a child of overlayId and must be a feature or map.feature.plot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "mil.symbology.feature.draw": {
            "type": "Feature",
            "direction": "inbound",
            "intent": "feature.draw",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay where the feature to be updated is currently found. If no overlayId is included, default overlay with ID equal to sending widget's ID is assumed. ",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": false
                },
                "featureId": {
                    "description": "The ID of the feature to be updated. ",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": true
                },
                "parentId": {
                    "description": "The parent id of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "name": {
                    "description": "The name that will display on the new drawing.  If name is not provided populated will be the same as id.",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "required": false
                },
                "type": {
                    "description": "",
                    "extension": true,
                    "extensionName": "cmwa-e-004-DrawingAndEditing",
                    "type": "string",
                    "enum": ["line", "polygon", "point"],
                    "required": true
                },
                "properties": {
                    "description": "A JSON object indicating any additional properties the widget wants stored with this feature.",
                    "extension": false,
                    "type": "object",
                    "required": [],
                    "properties": {
                        "modifiers": {
                            "type": "object",
                            "required": false,
                            "properties": {
                                "standard": {
                                    "type": "string",
                                    "required": false,
                                    "enum": ["2525b", "2525c"]
                                },
                                "size": {
                                    "type": "number",
                                    "required": false
                                },
                                "additionalInfo1": {
                                    "type": "string",
                                    "required": false
                                },
                                "additionalInfo2": {
                                    "type": "string",
                                    "required": false
                                },
                                "additionalInfo3": {
                                    "type": "string",
                                    "required": false
                                },
                                "altitudeDepth": {
                                    "description": "An array of numbers indicating an angle in degrees or mils depending on the MIL-STD-2525 and USAS",
                                    "type": "number[]",
                                    "required": false
                                },
                                "combatEffectiveness": {
                                    "type": "string",
                                    "required": false
                                },
                                "dateTimeGroup1": {
                                    "type": "string",
                                    "required": false
                                },
                                "dateTimeGroup2": {
                                    "type": "string",
                                    "required": false
                                },
                                "directionOfMovement": {
                                    "type": "string",
                                    "required": false
                                },
                                "distance": {
                                    "type": "string",
                                    "required": false
                                },
                                "equipmentType": {
                                    "type": "string",
                                    "required": false
                                },
                                "evaluationRating": {
                                    "type": "string",
                                    "required": false
                                },
                                "higherFormation": {
                                    "type": "string",
                                    "required": false
                                },
                                "hostile": {
                                    "type": "string",
                                    "required": false,
                                    "enum": ["ENY"]
                                },
                                "iffSiff": {
                                    "type": "string",
                                    "required": false
                                },
                                "location": {
                                    "description": "The location of the symbol.  This is just a label and does not affect the actual location of the symbol",
                                    "type": "string",
                                    "required": false
                                },
                                "offsetIndicator": {
                                    "type": "string",
                                    "required": false
                                },
                                "quantity": {
                                    "type": "string",
                                    "required": false
                                },
                                "reinforcedOrReduced": {
                                    "type": "string",
                                    "required": false,
                                    "enum": ["(-)", "(+)", "(+/-)"]
                                },
                                "signatureEquipment": {
                                    "type": "string",
                                    "required": false
                                },
                                "specialC2Headquarters": {
                                    "type": "string",
                                    "required": false
                                },
                                "speed": {
                                    "type": "string",
                                    "required": false
                                },
                                "staffComments": {
                                    "type": "string",
                                    "required": false
                                },
                                "uniqueDesignation1": {
                                    "type": "string",
                                    "required": false
                                },
                                "uniqueDesignation2": {
                                    "type": "string",
                                    "required": false
                                }
                            }
                        },
                        "airspace": {
                            "type": "object[]",
                            "required": false,
                            "properties": {
                                "minAltitude": {
                                    "type": "number",
                                    "required": false
                                },
                                "maxAltitude": {
                                    "type": "number",
                                    "required": false
                                },
                                "leftWidth": {
                                    "type": "number",
                                    "required": false
                                },
                                "rightWidth": {
                                    "type": "number",
                                    "required": false
                                },
                                "innerRadius": {
                                    "type": "number",
                                    "required": false
                                },
                                "outerRadius": {
                                    "type": "number",
                                    "required": false
                                },
                                "leftAziumth": {
                                    "type": "number",
                                    "required": false
                                },
                                "rightAzimuth": {
                                    "type": "number",
                                    "required": false
                                },
                                "turn": {
                                    "type": "string",
                                    "required": false,
                                    "enum": ["left", "right", "center"]
                                },
                                "width": {
                                    "type": "number",
                                    "required": false
                                }
                            }
                        },
                        "readOnly": {
                            "description": "Determines if users are allowed to edit the feature.  If the feature is not readOnly, a user has the ability to alter the positions and properties of the feature.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "boolean",
                            "required": false
                        },
                        "altitudeMode": {
                            "description": "Specifies how the alititude coordinates should be interpreted.  Can be 'relativeToGround', 'clampToGround', or 'absolute'. 'relativeToGround' interprets altitude as meters above the ground.  If above water, it interprets it as meters above sea level.  'clampToGround' clamps the points of the graphic on the ground.  'absolute' interprets altitude as meters above sea level.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["relativeToGround", "clampToGround", "absolute"],
                            "required": false
                        },
                        "fillColor": {
                            "description": "The color for the interior of a polygon or the fill of an icon. The color is a 6 character hex string of the format AARRGGBB where A = alpha,R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineColor": {
                            "description": "The color for a line or the outline of a polygon. The color is a 8 character hex string of the format AARRGGBB where A = alpha, R = red, G = green B = blue. 'FF000000' is solid black and '00FFFFFF' is transparent white.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "pattern": "[A-Fa-f0-9]{8}",
                            "required": false
                        },
                        "lineThickness": {
                            "description": "The width in pixels of a line or outline of a polygon. ",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "lineStyle": {
                            "description": "The style of a line or border of a polygon.  Can be 'dot', 'dash', 'dashdot', 'longdash', 'longdashdot','solid'",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["dot", "dash", "dashdot", "longdash", "longdashdot", "solid"],
                            "required": false
                        },
                        "iconUrl": {
                            "description": "Url to an external graphic that will be used for rendering points.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "required": false
                        },
                        "iconWidth": {
                            "description": "The width of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconHeight": {
                            "description": "The height of the image found at iconUrl in pixels. If ommited it will use the actual dimensions of the image.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconXOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.xUnits parameter.  If no properties.xUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "iconYOffset": {
                            "description": "The offset of where the anchor of an icon is in relation to the properties.yUnits parameter.  If no properties.yUnits is found it will default to 'pixel'.  If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "number",
                            "required": false
                        },
                        "xUnits": {
                            "description": "Units in which iconXOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the left. If xUnits is set to 'insetPixel' the anchor will offset from the right, if xUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        },
                        "yUnits": {
                            "description": "Units in which iconYOffset is specified. Can be 'pixel', 'iconOffset', or 'fraction'. If set to 'pixel', the anchor offset starts from the bottom. If yUnits is set to 'insetPixel' the anchor will offset from the top, if yUnits is set to 'fraction' the icon will offset by a percentage from 0-1 starting from left.",
                            "extension": true,
                            "extensionName": "cmwa-e-007-properties",
                            "type": "string",
                            "enum": ["pixel", "iconOffset", "fraction"],
                            "required": false
                        }
                    }
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.view.zoom": {
            "type": "View",
            "purpose": "Zoom the map to a particular range.",
            "extension": false,
            "direction": "inbound",
            "intent": "view.set",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "range": {
                    "description": "The distance in meters from the map (note that most 2-D map renderers do not support infinite zoom and the range will be translated into the nearest supported zoom level).",
                    "extension": false,
                    "type": "number",
                    "minimum": 1,
                    "required": false
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.view.center.overlay": {
            "type": "View",
            "purpose": "Center the map on a particular overlay. The map may also be zoomed to show the entire overlay (if possible) or to show a given range.",
            "extension": false,
            "direction": "inbound",
            "intent": "view.set",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay to center on. If no overlayId is included, default overlay with ID equal to sending widget’s ID is assumed. ",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "zoom": {
                    "description": "If “auto,” zoom will adjust to best fit the overlay in the user’s viewable area. If a number, map will zoom to specified range in meters. If no zoom attribute is included, no zoom is performed.",
                    "extension": false,
                    "type": ["string", "number"],
                    "required": false,
                    "minimum": 1,
                    "enum": ["auto"]
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.view.center.feature": {
            "type": "View",
            "purpose": "Center the map on a particular feature. The map may also be zoomed to show the entire feature (if possible) or to show a given range.",
            "direction": "inbound",
            "intent": "view.set",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "overlayId": {
                    "description": "The ID of the overlay where the feature to be centered on is found. If no overlayId is included, default overlay with ID equal to sending widget’s ID is assumed. ",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "parentId": {
                    "description": "The parent id of the feature.  Used only if the parent of the feature is another feature. The parentId must be a child of overlayId and must be a feature or map.feature.unplot will return an error",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                },
                "featureId": {
                    "description": "The ID of the feature to center on. ",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "zoom": {
                    "description": "If \"auto,\" map will adjust to best fit the feature in the user's viewable area. If a number, map will zoom to specified range in meters. If no zoom attribute is included, no zoom is performed.",
                    "extension": false,
                    "type": ["string", "number"],
                    "required": false,
                    "enum": ["auto"],
                    "minimum": 1
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.view.center.location": {
            "type": "View",
            "purpose": "Center the map on a particular location. The map may also be zoomed as close as possible to the location or to a given range.",
            "extension": false,
            "direction": "inbound",
            "intent": "view.set",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "zoom": {
                    "description": "If “auto,” map will adjust to zoom as close as possible to the given location in the user's viewable area. If a number, map will zoom to specified range in meters. If no zoom attribute is included, no zoom is performed.",
                    "extension": false,
                    "type": ["string", "number"],
                    "enum": ["auto"],
                    "minimum": 1,
                    "required": false
                },
                "location": {
                    "description": "Location to be centered in map.",
                    "extension": false,
                    "type": "object",
                    "required": true,
                    "properties": {
                        "lat": {
                            "description": "The latitude value of the point.",
                            "extension": false,
                            "type": "number",
                            "required": true,
                            "minimum": -90,
                            "maximum": 90
                        },
                        "lon": {
                            "description": "The longitude value of the point.",
                            "extension": false,
                            "type": "number",
                            "required": true,
                            "minimum": -180,
                            "maximum": 180
                        }
                    }
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.view.center.bounds": {
            "type": "View",
            "purpose": "Center the map on a particular bounding box. The map may also be zoomed to show the entire bounds (if possible) or to show a given range.",
            "extension": false,
            "direction": "inbound",
            "intent": "view.set",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "bounds": {
                    "description": "Bounding box of area to be centered in map.",
                    "extension": false,
                    "type": "object",
                    "required": true,
                    "properties": {
                        "southWest": {
                            "description": "",
                            "extension": false,
                            "type": "object",
                            "required": true,
                            "properties": {
                                "lat": {
                                    "description": "The latitude value of the southwest point.",
                                    "extension": false,
                                    "type": "number",
                                    "required": true,
                                    "minimum": -90,
                                    "maximum": 90
                                },
                                "lon": {
                                    "description": "The longitude value of the southwest point.",
                                    "extension": false,
                                    "type": "number",
                                    "required": true,
                                    "minimum": -180,
                                    "maximum": 180
                                }
                            }
                        },
                        "northEast": {
                            "description": "",
                            "extension": false,
                            "type": "object",
                            "required": true,
                            "properties": {
                                "lat": {
                                    "description": "The latitude value of the northeast point.",
                                    "extension": false,
                                    "type": "number",
                                    "required": true,
                                    "minimum": -90,
                                    "maximum": 90
                                },
                                "lon": {
                                    "description": "The longitude value of the northeast point.",
                                    "extension": false,
                                    "type": "number",
                                    "required": true,
                                    "minimum": -180,
                                    "maximum": 180
                                }
                            }
                        }
                    }
                },
                "zoom": {
                    "description": "If \"auto,\" map will adjust to best fit the bounds in the user's viewable area. If a number, map will zoom to specified range in meters. If no zoom attribute is included, no zoom is performed.",
                    "extension": "false",
                    "type": "string",
                    "required": false
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.view.clicked": {
            "type": "View",
            "purpose": "“Click,” or report that map was clicked.",
            "extension": false,
            "direction": "outbound",
            "intent": "click",
            "resultChannel": "click",
            "payload": {
                "lat": {
                    "description": "The latitude of the location that was clicked.",
                    "extension": false,
                    "type": "number",
                    "required": true,
                    "minimum": -90,
                    "maximum": 90
                },
                "lon": {
                    "description": "The longitude of the location that was clicked.",
                    "extension": false,
                    "type": "number",
                    "required": true,
                    "minimum": -180,
                    "maximum": 180
                },
                "button": {
                    "description": "Which mouse button was clicked.  Allowable values are “right,” “left,” and “middle.”  For backwards compatibility, if this attribute is not populated it should be treated as a left mouse click the same as if it were populated with “left.”",
                    "extension": false,
                    "type": "string",
                    "required": true,
                    "enum": ["right", "left", "middle"]
                },
                "type": {
                    "description": "The type of click event. Allowable values are “single” and “double.”  For backwards compatibility, if this attribute is not populated it should be assumed to be a single mouse click and treated the same as if it were populated with “single.”",
                    "extension": false,
                    "type": "string",
                    "required": true,
                    "enum": ["single", "double"]
                },
                "keys": {
                    "description": "An array of keys pressed during the click event.  Allowable values are “alt,” “ctrl,” “shift,” and “none.” For backwards compatibility, if this attribute is not populated it should be assumed that no additional keys were pressed and behave the same way as if it were populated with “none.”",
                    "extension": false,
                    "type": "string",
                    "required": true,
                    "enum": ["alt", "ctrl", "shift", "none"]
                }
            }
        },
        "map.view.coordinateSystem": {
            "type": "View",
            "purpose": "Sets the displayed coordinates of the map or indicates the displayed coordinates have been changed by the map.",
            "extension": true,
            "extensionName": "cmwa-e-014-coordinateSystem",
            "direction": "bidirectional",
            "intent": "click",
            "resultChannel": "",
            "payload": {
                "coodrinateSystem": {
                    "type": "string",
                    "description": "The coordinate system used to display mouse position coordinates.  Can be either \"dd\", \"dms\", \"mgrs\",\"utm\" or \"rads\".  Defaults to \"dd\".",
                    "extension": true,
                    "extensionName": "cmwa-e-014-coordinateSystem",
                    "enum": ["dd", "dms", "mgrs", "utm", "rads"]
                }
            }
        },
        "map.get": {
            "type": ["Overlay", "Feature", "Static"],
            "purpose": "Request information about what is on the map.",
            "extension": true,
            "extensionName": "cmwa-e-008-MapQuery",
            "direction": "inbound",
            "intent": "map.get",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "types": {
                    "extension": true,
                    "extensionName": "cmwa-e-008-MapQuery",
                    "type": "array",
                    "enum": ["overlay", "feature", "static"],
                    "required": false
                },
                "recursive": {
                    "extension": true,
                    "extensionName": "cmwa-e-008-MapQuery",
                    "type": "boolean",
                    "required": false
                },
                "select": {
                    "extension": true,
                    "extensionName": "cmwa-e-008-MapQuery",
                    "type": "array",
                    "required": false,
                    "enum": ["name", "overlayId", "featureId", "parentId", "properties", "format", "menuId", "feature", "url"]
                },
                "filter": {
                    "extension": true,
                    "extensionName": "cmwa-e-008-MapQuery",
                    "type": "object[]",
                    "required": false,
                    "properties": {
                        "property": {
                            "type": "string",
                            "required": true,
                            "enum": ["name", "overlayId", "featureId", "parentId", "properties", "format", "menuId", "feature", "url"]
                        },
                        "term": {
                            "type": ["string", "object"],
                            "required": true
                        }
                    }

                }
            }
        },
        "map.menu.create": {
            "type": "Menu",
            "purpose": "Creates a context menu and registers it with the map.  When the user right clicks on the map, the menu items will appear.  This allows for multiple widgets to register similarly named contextMenu items, but listed in the context of the widget(s) that will handle the action of the menu item click.  If mapMenu is false, the menu is a feature menu, and will appear only when it has been registered during a feature.plot call.",
            "extension": true,
            "extensionName": "cmwa-e-002-contextMenus",
            "direction": "inbound",
            "intent": "",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "menuId": {
                    "description": "The unique id of the menu.  This id can be added to a feature.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": true,
                    "type": "string"
                },
                "mapMenu": {
                    "description": "A Boolean value which determines if menu is a map menu or feature menu.  If true, the menu will appear as a context menu of a map.  If false, the menu will appear in the context of a feature.  Default is false, a feature menu.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": false,
                    "type": "boolean"
                },
                "menuItems": {
                    "description": "This is an array of menu items which are objects consisting of a label and an id for each menu item.  When a feature on the map is right-clicked the map will check to see if the feature has a context menu assigned to it and display the menu.  When a menu item is clicked by the user, a message will be sent on the map.menu.clicked channel to notify the widget to take action.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": true,
                    "type": "object[]",
                    "properties": {
                        "menuItemId": {
                            "description": "The item to be added into the context menu",
                            "extension": true,
                            "extensionName": "cmwa-e-002-contextMenus",
                            "required": true,
                            "type": "string"
                        },
                        "label": {
                            "description": "The visible label assigned to an item in the context menu",
                            "extension": true,
                            "extensionName": "cmwa-e-002-contextMenus",
                            "required": true,
                            "type": "string"
                        },
                        "iconUrl": {
                            "description": "A URL to a specific icon displayed next to the item in the context menu",
                            "extension": true,
                            "extensionName": "cmwa-e-002-contextMenus",
                            "required": false,
                            "type": "string"
                        },
                        "active": {
                            "description": "A Boolean value which determines whether a menu item is active or not, default is true",
                            "extension": true,
                            "extensionName": "cmwa-e-002-contextMenus",
                            "required": false,
                            "type": "boolean"
                        }

                    }
                }
            }
        },
        "map.menu.clicked": {
            "type": "Menu",
            "purpose": "Called by the map after a context menu item is clicked to notify the widget which registered the context menu to take action.",
            "extension": true,
            "extensionName": "cmwa-e-002-contextMenus",
            "direction": "outbound",
            "intent": "",
            "resultChannel": "map.menu.clicked",
            "payload": {
                "menuId": {
                    "description": "The id of the actual clicked object (may be a sub- feature contained within the aggregate feature data with the given featureId). ",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": true,
                    "type": "string"

                },
                "menuItemId": {
                    "description": "The id of the item in the menu clicked.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": true,
                    "type": "string"
                },
                "lat": {
                    "description": "The latitude coordinate of the click. ",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": false,
                    "type": "number",
                    "minimum": -90,
                    "maximum": 90

                },
                "lon": {
                    "description": "The longitude coordinate of the click.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": false,
                    "type": "number",
                    "minimum": -180,
                    "maximum": 180
                },
                "range": {
                    "description": "The altitude of the click if available.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": false,
                    "type": "string"
                },
                "x": {
                    "description": "The x coordinate relative to the iframe containing the click",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": false,
                    "type": "number"
                },
                "y": {
                    "description": "The y coordinate relative to the iframe containing the click",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": false,
                    "type": "number"
                },
                "featureId": {
                    "description": "The id of the feature that was mapped to the context menu.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": false,
                    "type": "string"
                },
                "overlayId": {
                    "description": "The overlay containing the feature that was clicked upon.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": false,
                    "type": "string"
                },
                "parentId": {
                    "description": "The ID of the parent overlay in which to create this overlay.",
                    "extension": true,
                    "extensionName": "cmwa-e-010-featureComposition",
                    "required": false,
                    "type": "string"
                }
            }
        },
        "map.menu.remove": {
            "type": "Menu",
            "purpose": "Removes a context menu and all its subsequent items.  All features with the menu or maps will remove the menu.",
            "extension": true,
            "extensionName": "cmwa-e-002-contextMenus",
            "direction": "inbound",
            "intent": "",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "menuId": {
                    "description": "The id of context menu to be removed.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": true,
                    "type": "string"
                }
            }
        },
        "map.menu.active": {
            "type": "Menu",
            "purpose": "Disables or enables a particular context menu item.  The disable will have the effect of \"graying\" out a menu item.",
            "extension": true,
            "extensionName": "cmwa-e-002-contextMenus",
            "direction": "inbound",
            "intent": "",
            "resultChannel": "map.transaction.complete",
            "payload": {
                "menuId": {
                    "description": "The ID of the parent overlay in which to create this overlay.",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": true,
                    "type": "string"
                },
                "itemLabel": {
                    "description": "The label of the item to be disabled",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": true,
                    "type": "string"
                },
                "active": {
                    "description": "A Boolean value describing whether the item is active or not",
                    "extension": true,
                    "extensionName": "cmwa-e-002-contextMenus",
                    "required": true,
                    "type": "string"
                }
            }
        },
        "map.status.request": {
            "type": "Status",
            "purpose": "Request current status from the map. Map will send out requested map.status messages in response.",
            "extension": false,
            "direction": "inbound",
            "intent": "status.get",
            "resultChannel": ["map.status.view", "map.status.about", "map.status.format", "map.status.initialization"],
            "payload": {
                "types": {
                    "description": "An array of status types being requested. Currently only status types of “about,” “format,” and “view” are supported (future versions are expected to support a larger family of statuses, perhaps including “overlay,” “feature,”or “selected”). If types attribute is not included, all status types will be generated.",
                    "extension": false,
                    "type": "array",
                    "enum": ["about", "format", "view", "initialization", "coordinatesystem", "selected"],
                    "required": false
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.status.initialization": {
            "type": "Status",
            "purpose": "Sends out information of when the map is loading, ready, and shutting down.  The map should automatically send out these events as they occur.  A map must send out these messages as they occur so the widgets will know when to begin sending messages to the map and when to stop.  ",
            "extension": true,
            "extensionName": "cmwa-e-009-MapInitialization",
            "direction": "outbound",
            "intent": "status.get",
            "resultChannel": "map.status.initialization",
            "payload": {
                "status": {
                    "description": "Indicates the current state of the map.  This can be one of the following options: \"init\", \"ready\", \"teardown\".   \"init\" means the map has been launched but is not ready to begin accepting commands.  \"ready\" means the map is ready to begin accepting commands.  A map will be \"ready\" once it has finished loading.  \"teardown\" indicates the user has closed the map and it is no longer available to use.",
                    "extension": true,
                    "extensionName": "cmwa-e-009-MapInitialization",
                    "type": "string",
                    "required": false,
                    "enum": ["init", "ready", "teardown"]
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.status.view": {
            "type": "Status",
            "purpose": "Send out the current status of the map view.",
            "extension": false,
            "direction": "outbound",
            "intent": "status.get",
            "resultChannel": "map.status.view",
            "payload": {
                "requester": {
                    "description": "Client that requested this status message be sent (if any). If no requester, message is being sent due to a map view change.",
                    "extension": false,
                    "type": "string",
                    "required": false
                },
                "bounds": {
                    "description": "Bounding box of area visible on map.",
                    "extension": false,
                    "type": "object",
                    "required": true,
                    "properties": {
                        "southWest": {
                            "description": "",
                            "extension": false,
                            "type": "object",
                            "required": true,
                            "properties": {
                                "lat": {
                                    "description": "The latitude value of the southwest point.",
                                    "extension": false,
                                    "type": "number",
                                    "required": true,
                                    "minimum": -90,
                                    "maximum": 90
                                },
                                "lon": {
                                    "description": "The longitude value of the southwest point.",
                                    "extension": false,
                                    "type": "number",
                                    "required": true,
                                    "minimum": -180,
                                    "maximum": 180
                                }
                            }
                        },
                        "northEast": {
                            "description": "",
                            "extension": false,
                            "type": "object",
                            "required": true,
                            "properties": {
                                "lat": {
                                    "description": "The latitude value of the northeast point.",
                                    "extension": false,
                                    "type": "number",
                                    "required": true,
                                    "minimum": -90,
                                    "maximum": 90
                                },
                                "lon": {
                                    "description": "The longitude value of the northeast point.",
                                    "extension": false,
                                    "type": "number",
                                    "required": true,
                                    "minimum": -180,
                                    "maximum": 180
                                }
                            }
                        }
                    }
                },
                "center": {
                    "description": "The current center of the map.",
                    "extension": false,
                    "type": "object",
                    "required": true,
                    "properties": {
                        "lat": {
                            "description": "The latitude value of the point.",
                            "extension": false,
                            "type": "number",
                            "required": true,
                            "minimum": -90,
                            "maximum": 90
                        },
                        "lon": {
                            "description": "The longitude value of the point.",
                            "extension": false,
                            "type": "number",
                            "required": true,
                            "minimum": -180,
                            "maximum": 180
                        }
                    }
                },
                "range": {
                    "description": "The current distance, in meters, map is zoomed out.",
                    "extension": false,
                    "type": "number",
                    "required": true,
                    "minimum": 1
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.status.format": {
            "type": "Status",
            "purpose": "Send out the list of data formats that the map widget supports; in other words, this map implementation supports the following feature formats.",
            "extension": false,
            "direction": "outbound",
            "intent": "status.get",
            "resultChannel": "map.status.request",
            "payload": {
                "format": {
                    "description": "An array of the formats that this map supports. Note that for this version of the Common Map Widget API, all map implementations must support KML, and WMS.  Additional map formats (for example, GeoJSON) may be supported",
                    "type": "array",
                    "required": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.status.about": {
            "type": "Status",
            "purpose": "Send out static information about this map implementation.",
            "extension": false,
            "direction": "outbound",
            "intent": "status.get",
            "resultChannel": "map.status.request",
            "payload": {
                "version": {
                    "description": "The version numbers of the Common Map Widget API that this map widget supports.",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "type": {
                    "description": "The type of map in the map widget.  Allowable values are “2-D,” “3-D,” or “other.”",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "widgetName": {
                    "description": "The name of the map widget.",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.status.coordinatesystem": {
            "type": "",
            "purpose": "Gets the displayed coordinates of the map.",
            "extension": true,
            "extensionName": "cmwa-e-014-coordinateSystem",
            "direction": "outbound",
            "intent": "status.get",
            "resultChannel": "map.status.coordinatesystem",
            "payload": {
                "coodrinateSystem": {
                    "type": "string",
                    "description": "The coordinate system used to display mouse position coordinates.  Can be either \"dd\", \"dms\", \"mgrs\",\"utm\" or \"rads\".  Defaults to \"dd\".",
                    "extension": true,
                    "extensionName": "cmwa-e-014-coordinateSystem",
                    "enum": ["dd", "dms", "mgrs", "utm", "rads"]
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.status.selected": {
            "type": "Feature",
            "purpose": "Send out ids about what selected features are currently on the map.",
            "extension": true,
            "extensionName": "cmwa-e-015-selection",
            "direction": "outbound",
            "intent": "map.get",
            "resultChannel": "map.status.selected",
            "payload": {
                "features": {
                    "type": "object[]",
                    "description": "An array of ids identifying the selected features on the map.",
                    "extension": true,
                    "extensionName": "cmwa-e-015-selection",
                    "properties": {
                        "featureId": {
                            "description": "The id of the feature selected",
                            "extension": true,
                            "extensionName": "cmwa-e-015-selection",
                            "type": "string",
                            "required": true
                        },
                        "overlayId": {
                            "description": "The overlay the feature is contained in.",
                            "extension": true,
                            "extensionName": "cmwa-e-015-selection",
                            "type": "string",
                            "required": true
                        },
                        "parentId": {
                            "description": "The parent feature, if part of a feature composition.",
                            "extension": true,
                            "extensionName": "cmwa-e-010-featureComposition",
                            "type": "string",
                            "required": false
                        }
                    }

                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }

        },
        "map.error": {
            "type": "Error",
            "purpose": "Map Widget reports errors occurred when attempting to process any message.",
            "extension": false,
            "direction": "outbound",
            "intent": "error",
            "resultChannel": "map.error",

            "payload": {
                "sender": {
                    "description": "Sender of message that caused error.",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "type": {
                    "description": "Type of message that caused error.",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "msg": {
                    "description": "The message that caused the error",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "error": {
                    "description": "A description of the error.",
                    "extension": false,
                    "type": "string",
                    "required": true
                },
                "transactionId": {
                    "description": "A unique id that gives the message an identity.  This message will maintain the id throughout the lifetime of the message until a map.transaction.complete or a map.error is called.",
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": false,
                    "noDocument": true
                }
            }
        },
        "map.transaction.complete": {
            "type": "Transaction",
            "purpose": "",
            "extension": true,
            "extensionName": "cmwa-e-001-transactions",
            "direction": "outbound",
            "intent": "none",
            "resultChannel": "*",
            "payload": {
                "transactionId": {
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": true
                },
                "successes": {
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "object[]",
                    "required": true,
                    "properties": {
                        "oneOf": [{
                            "type": "object",
                            "properties": {
                                "overlayId": {
                                    "type": "string",
                                    "required": true
                                }
                            }
                        }, {
                            "type": "object",
                            "properties": {
                                "overlayId": {
                                    "type": "string",
                                    "required": true
                                },
                                "featureId": {
                                    "type": "string",
                                    "required": true
                                },
                                "parentId": {
                                    "type": "string",
                                    "required": false
                                }
                            }
                        }, {
                            "type": "object",
                            "properties": {
                                "bounds": {
                                    "description": "Bounding box of area visible on map.",
                                    "extension": false,
                                    "type": "object",
                                    "required": true,
                                    "properties": {
                                        "southWest": {
                                            "description": "",
                                            "extension": false,
                                            "type": "object",
                                            "required": true,
                                            "properties": {
                                                "lat": {
                                                    "description": "The latitude value of the southwest point.",
                                                    "extension": false,
                                                    "type": "number",
                                                    "required": true,
                                                    "minimum": -90,
                                                    "maximum": 90
                                                },
                                                "lon": {
                                                    "description": "The longitude value of the southwest point.",
                                                    "extension": false,
                                                    "type": "number",
                                                    "required": true,
                                                    "minimum": -180,
                                                    "maximum": 180
                                                }
                                            }
                                        },
                                        "northEast": {
                                            "description": "",
                                            "extension": false,
                                            "type": "object",
                                            "required": true,
                                            "properties": {
                                                "lat": {
                                                    "description": "The latitude value of the northeast point.",
                                                    "extension": false,
                                                    "type": "number",
                                                    "required": true,
                                                    "minimum": -90,
                                                    "maximum": 90
                                                },
                                                "lon": {
                                                    "description": "The longitude value of the northeast point.",
                                                    "extension": false,
                                                    "type": "number",
                                                    "required": true,
                                                    "minimum": -180,
                                                    "maximum": 180
                                                }
                                            }
                                        }
                                    }
                                },
                                "center": {
                                    "description": "The current center of the map.",
                                    "extension": false,
                                    "type": "object",
                                    "required": true,
                                    "properties": {
                                        "lat": {
                                            "description": "The latitude value of the point.",
                                            "extension": false,
                                            "type": "number",
                                            "required": true,
                                            "minimum": -90,
                                            "maximum": 90
                                        },
                                        "lon": {
                                            "description": "The longitude value of the point.",
                                            "extension": false,
                                            "type": "number",
                                            "required": true,
                                            "minimum": -180,
                                            "maximum": 180
                                        }
                                    }
                                },
                                "range": {
                                    "description": "The current distance, in meters, map is zoomed out.",
                                    "extension": false,
                                    "type": "number",
                                    "required": true,
                                    "minimum": 1
                                }
                            }
                        }, {
                            "type": "object",
                            "properties": {
                                "overlays": {
                                    "type": "array",
                                    "required": false
                                },
                                "features": {
                                    "type": "array",
                                    "required": false
                                }
                            }
                        }]
                    }
                },
                "failures": {
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "object[]",
                    "properties": {
                        "overlayId": {
                            "type": "string",
                            "required": true
                        },
                        "featureId": {
                            "type": "string",
                            "required": true
                        },
                        "parentId": {
                            "type": "string",
                            "required": false
                        }
                    },
                    "required": true
                },
                "sender": {
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": true
                },
                "orginChannel": {
                    "extension": true,
                    "extensionName": "cmwa-e-001-transactions",
                    "type": "string",
                    "required": true
                }
            }
        }
    }
}